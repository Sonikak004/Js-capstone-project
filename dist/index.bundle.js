"use strict";(self.webpackChunkmywebpackstarter=self.webpackChunkmywebpackstarter||[]).push([[826],{28:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),A=t(645),i=t.n(A),a=t(667),c=t.n(a),s=new URL(t(242),t.b),l=i()(o()),d=c()(s);l.push([n.id,`/* Importing downloaded font */\n@font-face {\n  font-family: 'MyFont', sans-serif;\n  src: url(${d}) format('ttf');\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  height: 100%;\n  font-family: 'MyFont', sans-serif;\n}\n\na {\n  text-decoration: none;\n  color: inherit;\n}\n\nspan {\n  position: relative;\n  right: 5px;\n}\n\nheader {\n  border: 1px solid black;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 2rem;\n  color: aliceblue;\n  background: #2c2c2c;\n}\n\nnav {\n  display: flex;\n  flex-direction: row;\n  gap: 1rem;\n}\n\n.nav-link:hover {\n  cursor: pointer;\n  color: #feca1b;\n}\n\n/* main */\n\n.poke-grid {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 20px;\n}\n\n.item {\n  text-align: center;\n  border: 1px solid #ccc;\n  padding: 10px;\n  width: 200px;\n}\n\n.item > img {\n  width: 100px;\n  height: 100px;\n  object-fit: contain;\n  margin-bottom: 10px;\n}\n\n#logo > img {\n  width: 10rem;\n}\n\nbutton {\n  border: none;\n  color: #2c2c2c;\n}\n\n.button {\n  border: 1px solid #2c2c2c;\n  margin-left: 3px;\n  margin-right: 3px;\n  height: 25px;\n  width: 90px;\n}\n\n.fas {\n  font-size: 17px;\n  height: 22px;\n  color: #feca1b;\n  top: 2px;\n  letter-spacing: 2px;\n  position: relative;\n  width: 25px;\n  background: none;\n}\n\n.fas:hover {\n  color: #028df0;\n}\n\n.button-hov {\n  outline: 0;\n  grid-gap: 8px;\n  align-items: center;\n  background: 0 0;\n  border: 1px solid #2c2c2c;\n  border-radius: 4px;\n  cursor: pointer;\n  display: inline-flex;\n  flex-shrink: 0;\n  font-size: 16px;\n  gap: 8px;\n  justify-content: center;\n  line-height: 1.5;\n  overflow: hidden;\n  padding: 12px 16px;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  transition: all 0.14s ease-out;\n  white-space: nowrap;\n}\n\n.button-hov:focus-visible {\n  outline-offset: 1px;\n}\n\n.button-hov:hover {\n  box-shadow: 4px 4px 0 #2c2c2c;\n  transform: translate(-4px, -4px);\n}\n\n.button-container {\n  display: flex;\n  flex-direction: column;\n  width: 178px;\n  height: 53px;\n  align-items: center;\n  justify-content: space-between;\n}\n\n#poke-list {\n  display: flex;\n  flex-wrap: wrap;\n  align-content: center;\n  justify-content: center;\n  padding: 35px 0;\n}\n\n.pokes:hover {\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2);\n}\n\n/* footer  */\n\nfooter {\n  width: 100%;\n  height: 70px;\n  right: 0;\n  background-color: #2c2c2c;\n}\n\n.footer-p {\n  color: rgb(255, 255, 255);\n}\n\n.ftxt {\n  color: #feca1b;\n  text-decoration: none;\n}\n\n.ftxt:hover {\n  color: rgb(2, 141, 240);\n  text-decoration: none;\n}\n\n.footer-d {\n  height: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/* Popup-Styling */\n.hidden {\n  display: none;\n}\n\n#container {\n  position: fixed;\n  width: 100%;\n  top: 0;\n  background: rgb(0, 6, 30, 0.8);\n  overflow-y: auto;\n  height: 100%;\n}\n\n#popup {\n  margin: 1rem auto 0;\n  padding: 0.5rem 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 446px;\n  background-color: white;\n}\n\n#closePop {\n  align-self: flex-end;\n}\n\n#popPic,\nfigcaption {\n  margin: 0 auto;\n  text-align: center;\n  width: 100%;\n}\n\n#popPic {\n  background: #000045;\n}\n\n#caption > h1 {\n  color: #f83636;\n}\n\n#popPic > img {\n  width: 15rem;\n}\n\n.details {\n  margin-top: 2rem;\n  display: grid;\n  grid-template-columns: 8rem 8rem;\n  text-align: center;\n  gap: 1rem 7rem;\n}\n\n.stats > ul {\n  margin: 0;\n  padding: 0 0.1rem 0 0.1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n}\n\nli {\n  list-style: none;\n}\n\n.comment-section {\n  margin-top: 1rem;\n  text-align: center;\n  width: 20rem;\n}\n\n#comments {\n  margin-top: 0;\n  padding: 0 0.5rem 0.5rem;\n  line-height: 1.3rem;\n  max-height: 5.64rem;\n  overflow: auto;\n  text-align: left;\n}\n\nform {\n  width: 20rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  align-items: flex-start;\n  text-align: center;\n  margin: 0.5rem 0 2rem;\n}\n\nform > h4 {\n  align-self: center;\n  margin: 0;\n}\n\n#submit {\n  background: #f83636;\n  color: #fff;\n  padding: 0.25rem;\n  border-radius: 4px;\n}\n\n#submit:hover {\n  cursor: pointer;\n  background: #feca1b;\n  color: #000045;\n}\n`,"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"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",sourcesContent:["/* Importing downloaded font */\r\n@font-face {\r\n  font-family: 'MyFont', sans-serif;\r\n  src: url('./my-font.ttf') format('ttf');\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  height: 100%;\r\n  font-family: 'MyFont', sans-serif;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n\r\nspan {\r\n  position: relative;\r\n  right: 5px;\r\n}\r\n\r\nheader {\r\n  border: 1px solid black;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem 2rem;\r\n  color: aliceblue;\r\n  background: #2c2c2c;\r\n}\r\n\r\nnav {\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 1rem;\r\n}\r\n\r\n.nav-link:hover {\r\n  cursor: pointer;\r\n  color: #feca1b;\r\n}\r\n\r\n/* main */\r\n\r\n.poke-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 20px;\r\n}\r\n\r\n.item {\r\n  text-align: center;\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  width: 200px;\r\n}\r\n\r\n.item > img {\r\n  width: 100px;\r\n  height: 100px;\r\n  object-fit: contain;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n#logo > img {\r\n  width: 10rem;\r\n}\r\n\r\nbutton {\r\n  border: none;\r\n  color: #2c2c2c;\r\n}\r\n\r\n.button {\r\n  border: 1px solid #2c2c2c;\r\n  margin-left: 3px;\r\n  margin-right: 3px;\r\n  height: 25px;\r\n  width: 90px;\r\n}\r\n\r\n.fas {\r\n  font-size: 17px;\r\n  height: 22px;\r\n  color: #feca1b;\r\n  top: 2px;\r\n  letter-spacing: 2px;\r\n  position: relative;\r\n  width: 25px;\r\n  background: none;\r\n}\r\n\r\n.fas:hover {\r\n  color: #028df0;\r\n}\r\n\r\n.button-hov {\r\n  outline: 0;\r\n  grid-gap: 8px;\r\n  align-items: center;\r\n  background: 0 0;\r\n  border: 1px solid #2c2c2c;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  flex-shrink: 0;\r\n  font-size: 16px;\r\n  gap: 8px;\r\n  justify-content: center;\r\n  line-height: 1.5;\r\n  overflow: hidden;\r\n  padding: 12px 16px;\r\n  text-decoration: none;\r\n  text-overflow: ellipsis;\r\n  transition: all 0.14s ease-out;\r\n  white-space: nowrap;\r\n}\r\n\r\n.button-hov:focus-visible {\r\n  outline-offset: 1px;\r\n}\r\n\r\n.button-hov:hover {\r\n  box-shadow: 4px 4px 0 #2c2c2c;\r\n  transform: translate(-4px, -4px);\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 178px;\r\n  height: 53px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n#poke-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-content: center;\r\n  justify-content: center;\r\n  padding: 35px 0;\r\n}\r\n\r\n.pokes:hover {\r\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n/* footer  */\r\n\r\nfooter {\r\n  width: 100%;\r\n  height: 70px;\r\n  right: 0;\r\n  background-color: #2c2c2c;\r\n}\r\n\r\n.footer-p {\r\n  color: rgb(255, 255, 255);\r\n}\r\n\r\n.ftxt {\r\n  color: #feca1b;\r\n  text-decoration: none;\r\n}\r\n\r\n.ftxt:hover {\r\n  color: rgb(2, 141, 240);\r\n  text-decoration: none;\r\n}\r\n\r\n.footer-d {\r\n  height: 70px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/* Popup-Styling */\r\n.hidden {\r\n  display: none;\r\n}\r\n\r\n#container {\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  background: rgb(0, 6, 30, 0.8);\r\n  overflow-y: auto;\r\n  height: 100%;\r\n}\r\n\r\n#popup {\r\n  margin: 1rem auto 0;\r\n  padding: 0.5rem 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 446px;\r\n  background-color: white;\r\n}\r\n\r\n#closePop {\r\n  align-self: flex-end;\r\n}\r\n\r\n#popPic,\r\nfigcaption {\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  width: 100%;\r\n}\r\n\r\n#popPic {\r\n  background: #000045;\r\n}\r\n\r\n#caption > h1 {\r\n  color: #f83636;\r\n}\r\n\r\n#popPic > img {\r\n  width: 15rem;\r\n}\r\n\r\n.details {\r\n  margin-top: 2rem;\r\n  display: grid;\r\n  grid-template-columns: 8rem 8rem;\r\n  text-align: center;\r\n  gap: 1rem 7rem;\r\n}\r\n\r\n.stats > ul {\r\n  margin: 0;\r\n  padding: 0 0.1rem 0 0.1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n}\r\n\r\nli {\r\n  list-style: none;\r\n}\r\n\r\n.comment-section {\r\n  margin-top: 1rem;\r\n  text-align: center;\r\n  width: 20rem;\r\n}\r\n\r\n#comments {\r\n  margin-top: 0;\r\n  padding: 0 0.5rem 0.5rem;\r\n  line-height: 1.3rem;\r\n  max-height: 5.64rem;\r\n  overflow: auto;\r\n  text-align: left;\r\n}\r\n\r\nform {\r\n  width: 20rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n  margin: 0.5rem 0 2rem;\r\n}\r\n\r\nform > h4 {\r\n  align-self: center;\r\n  margin: 0;\r\n}\r\n\r\n#submit {\r\n  background: #f83636;\r\n  color: #fff;\r\n  padding: 0.25rem;\r\n  border-radius: 4px;\r\n}\r\n\r\n#submit:hover {\r\n  cursor: pointer;\r\n  background: #feca1b;\r\n  color: #000045;\r\n}\r\n"],sourceRoot:""}]);const p=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,A){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&i[l[0]]||(void 0!==A&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=A),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),A="/*# ".concat(o," */");return[e].concat([A]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var A={},i=[],a=0;a<n.length;a++){var c=n[a],s=r.base?c[0]+r.base:c[0],l=A[s]||0,d="".concat(s," ").concat(l);A[s]=l+1;var p=t(d),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=o(m,r);r.byIndex=a,e.splice(a,0,{identifier:d,updater:u,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var A=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<A.length;i++){var a=t(A[i]);e[a].references--}for(var c=r(n,o),s=0;s<A.length;s++){var l=t(A[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}A=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},263:(n,e,t)=>{var r=t(379),o=t.n(r),A=t(795),i=t.n(A),a=t(569),c=t.n(a),s=t(565),l=t.n(s),d=t(216),p=t.n(d),m=t(589),u=t.n(m),E=t(28),f={};f.styleTagTransform=u(),f.setAttributes=l(),f.insert=c().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=p(),o()(E.Z,f),E.Z&&E.Z.locals&&E.Z.locals;const g={updateLikeCountInPopup:(n,e)=>{const t=document.getElementById("container");if(t){const r=t.querySelector("#likesCount");r&&r.getAttribute("data-pokemon")===n&&(r.textContent=e.toString())}}},C=t.p+"6306358e29b1bb7cabb8.png",B=async(n,e,t,r)=>{const o=`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/${t}/comments?item_id=${e}`,A=await fetch(o),i=await A.json();if(n.innerHTML="",Array.isArray(i)){i.forEach((e=>{const t=document.createElement("p");t.innerHTML=`${e.creation_date} ${e.username}: ${e.comment}`,n.appendChild(t)}));const e=(n=>n.childElementCount)(n);r.innerText=`Comments (${e})`}else{const e=document.createElement("p");e.innerHTML="No comments available",n.appendChild(e),r.innerText="Comments (0)"}},h=new Image;h.src=C,h.alt="logo",document.getElementById("logo").appendChild(h);const x=document.getElementById("poke-list");let b={};const v=document.createElement("div");v.classList.add("poke-grid");const y="J5DvxD332GJ3W0sJ0ALC";(async()=>{try{const n=await fetch(`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/${y}/likes`);if(n.ok){const e=await n.json();b={},e.forEach((n=>{b[n.item_id]=n.likes})),localStorage.setItem("likesData",JSON.stringify(b)),v.innerHTML="",fetch("https://pokeapi.co/api/v2/pokemon?limit=40").then((n=>{if(!n.ok)throw new Error("Failed to fetch Pokemon data");return n.json()})).then((n=>{const e=n.results.length;document.getElementById("counter").textContent=`Pokémon(${e})`,n.results.forEach((n=>{const e=document.createElement("div");e.classList.add("item"),e.classList.add("pokes");const t=document.createElement("h2");t.textContent=n.name;const r=document.createElement("img"),o=(n=>{const e=n.split("/");return e[e.length-2]})(n.url);r.src=`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${o}.svg`,r.classList.add("pokemon"),r.alt=n.name;const A=document.createElement("div");A.classList.add("button-container");const i=document.createElement("button");i.classList.add("button"),i.classList.add("button-hov"),i.textContent="Comments",i.setAttribute("name",n.name),i.setAttribute("id",`${o}c`),i.classList.add("pokePop");const a=document.createElement("button");a.classList.add("fas"),a.classList.add("fa-heart"),a.setAttribute("id",n.name);const c=b[n.name]||0;a.textContent=c,a.addEventListener("click",(async()=>{await(async(n,e)=>{try{if((await fetch(`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/${y}/likes`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({item_id:n})})).ok){const t=(b[n]||0)+1;b[n]=t,(n=>{const e=document.getElementById(n);if(e){const n=e.getAttribute("id"),t=b[n]||0;e.textContent=t.toString()}})(e),g(n,t),localStorage.setItem("likesData",JSON.stringify(b)),((n,e)=>{const t=document.getElementById(n);if(t){const n=e[t.getAttribute("id")]||0;t.innerHTML=n.toString()}})(e,b)}}catch(n){}})(n.name,n.name)})),A.appendChild(a),A.appendChild(i),e.appendChild(t),e.appendChild(r),e.appendChild(A),v.appendChild(e)})),x.appendChild(v)})).catch((()=>{}))}}catch(n){}})(),document.addEventListener("DOMContentLoaded",(()=>{const n=document.createElement("div");n.id="container",n.className="hidden",document.querySelector("main").addEventListener("click",(async e=>{if(e.target.classList.contains("pokePop")){const t=e.target.name,r=await fetch(`https://pokeapi.co/api/v2/pokemon/${t}`),o=await r.json(),A=[],i=[];for(let n=0;n<4;n+=1)void 0!==o.abilities[n]&&A.push(o.abilities[n].ability.name),void 0!==o.moves[n]&&i.push(o.moves[n].move.name);n.innerHTML=((n,e,t)=>`\n<div id="popup">\n  <a href="#" id="closePop">\n    <i class="fas fa-times fa-lg"></i>\n  </a>\n  <figure id="popPic">\n    <img src="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${n.id}.svg" alt="${n.name}">\n    <figcaption id="caption"><h1>${n.name}</h1></figcaption>\n  </figure>\n\n  <div class="details">\n    <div class="stats">Height: ${n.height}</div>\n    <div class="stats">Weight: ${n.weight}</div>\n    <div class="stats">Abilities:\n        <ul>\n          ${e.map((n=>`<li>${n}</li>`)).join("")}\n        </ul>\n    </div>\n    <div class="stats">Moves:\n        <ul>\n          ${t.map((n=>`<li>${n}</li>`)).join("")}\n        </ul>\n    </div>  \n  </div>\n  <div class="comment-section">\n    <h4 id='comments-title'>Comments</h4>\n    <div id="comments"></div>\n  </div>\n  <form id='form'>\n    <h4>Add a comment</h4>\n    <input type="text" id="name" name='name' placeholder="Your name" required>\n    <textarea name="comment" id="comment" cols="30" rows="5" placeholder="Your insights" required></textarea>\n    <button type="submit" id='submit'>Comment</button>\n  </form>\n</div>\n`)(o,A,i),document.body.appendChild(n),n.classList.remove("hidden");const a=document.getElementById("comments-title"),c=document.getElementById("comments"),s=e.target.id.toString();B(c,s,y,a);const l=document.getElementById("form");l.addEventListener("click",(async n=>{if("submit"===n.target.id){n.preventDefault();const e=document.getElementById("name"),t=document.getElementById("comment"),r={item_id:s,username:e.value,comment:t.value},o=`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/${y}/comments`;await fetch(o,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)}).then((n=>JSON.stringify(n))),B(c,s,y,a),l.reset()}})),document.getElementById("closePop").addEventListener("click",(e=>{e.preventDefault(),n.classList.add("hidden")}))}}))}))},242:(n,e,t)=>{n.exports=t.p+"e2c87c4f335f8ae6fa63.ttf"}},n=>{n(n.s=263)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,