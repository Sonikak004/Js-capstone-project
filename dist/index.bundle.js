"use strict";(self.webpackChunkmywebpackstarter=self.webpackChunkmywebpackstarter||[]).push([[826],{28:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),o=t.n(r),i=t(645),A=t.n(i)()(o());A.push([n.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  height: 100%;\n  margin: 0;\n  padding: 0;\n}\n\na {\n  text-decoration: none;\n  color: inherit;\n}\n\nheader {\n  border: 1px solid black;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 2rem;\n  color: aliceblue;\n  background: #2c2c2c;\n}\n\nnav {\n  display: flex;\n  flex-direction: row;\n  gap: 1rem;\n}\n\n.nav-link:hover {\n  cursor: pointer;\n  color: #feca1b;\n}\n\n/* main */\n\n.poke-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n}\n\n.item {\n  text-align: center;\n  border: 1px solid #ccc;\n  padding: 10px;\n  width: 200px;\n}\n\n.item > img {\n  width: 100px;\n  height: 100px;\n  object-fit: contain;\n  margin-bottom: 10px;\n}\n\n#logo > img {\n  width: 10rem;\n}\n\nbutton {\n  border: none;\n  color: #2c2c2c;\n}\n\n.button {\n  border: 1px solid #2c2c2c;\n  margin-left: 3px;\n  margin-right: 3px;\n  height: 25px;\n  width: 90px;\n}\n\n.fas {\n  font-size: 18px;\n  height: 22px;\n  color: #feca1b;\n  top: 2px;\n  position: relative;\n  width: 25px;\n  background: none;\n}\n\n.fas:hover {\n  color: rgb(2, 141, 240);\n}\n\n#poke-list {\n  display: flex;\n  flex-wrap: wrap;\n  align-content: center;\n  height: 500px;\n  justify-content: center;\n}\n\n/* footer  */\n\nfooter {\n  position: absolute;\n  bottom: 0;\n  width: 100vw;\n  height: 70px;\n  right: 0;\n  background-color: #2c2c2c;\n}\n\n.footer-p {\n  color: rgb(255, 255, 255);\n}\n\n.ftxt {\n  color: #feca1b;\n  text-decoration: none;\n}\n\n.ftxt:hover {\n  color: rgb(2, 141, 240);\n  text-decoration: none;\n}\n\n.footer-d {\n  height: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/* Popup-Styling */\n.hidden {\n  display: none;\n}\n\n#container {\n  position: absolute;\n  width: 100%;\n  top: 0;\n  background:\n    linear-gradient(\n      90deg,\n      rgba(0, 0, 0, 0.8) 29.6%,\n      rgba(255, 255, 255, 1) 29.6%,\n      rgba(255, 255, 255, 1) 69.1%,\n      rgba(0, 0, 0, 0.8) 69.1%\n    );\n  overflow-y: auto;\n  height: 100%;\n}\n\n#popup {\n  margin: 0 auto;\n  padding: 0.5rem 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 40%;\n  max-height: 100vh;\n}\n\n#closePop {\n  align-self: flex-end;\n}\n\n#popPic,\nfigcaption {\n  margin: 0 auto;\n  text-align: center;\n}\n\n#popPic > img {\n  width: 15rem;\n}\n\n.details {\n  margin-top: 2rem;\n  display: grid;\n  grid-template-columns: 8rem 8rem;\n  text-align: center;\n  gap: 1rem 7rem;\n}\n\n.stats > ul {\n  margin: 0;\n  padding: 0 0.1rem 0 0.1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n}\n\nli {\n  list-style: none;\n}\n\n.comment-section {\n  margin-top: 1rem;\n  text-align: center;\n  width: 20rem;\n}\n\n#comments {\n  /* border: 1px solid black; */\n  margin-top: 0;\n  padding: 0 0.5rem 0.5rem;\n  line-height: 1.3rem;\n  max-height: 5.64rem;\n  overflow: auto;\n  text-align: left;\n}\n\nform {\n  width: 20rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  align-items: flex-start;\n  text-align: center;\n  margin: 0.5rem 0 2rem;\n}\n\nform > h4 {\n  align-self: center;\n  margin: 0;\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;;EAEE,YAAY;EACZ,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,qBAAqB;EACrB,cAAc;AAChB;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,mBAAmB;EACnB,kBAAkB;EAClB,gBAAgB;EAChB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,eAAe;EACf,cAAc;AAChB;;AAEA,SAAS;;AAET;EACE,aAAa;EACb,qCAAqC;EACrC,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,sBAAsB;EACtB,aAAa;EACb,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,yBAAyB;EACzB,gBAAgB;EAChB,iBAAiB;EACjB,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,cAAc;EACd,QAAQ;EACR,kBAAkB;EAClB,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,qBAAqB;EACrB,aAAa;EACb,uBAAuB;AACzB;;AAEA,YAAY;;AAEZ;EACE,kBAAkB;EAClB,SAAS;EACT,YAAY;EACZ,YAAY;EACZ,QAAQ;EACR,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,cAAc;EACd,qBAAqB;AACvB;;AAEA;EACE,uBAAuB;EACvB,qBAAqB;AACvB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA,kBAAkB;AAClB;EACE,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,MAAM;EACN;;;;;;;KAOG;EACH,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,cAAc;EACd,oBAAoB;EACpB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,UAAU;EACV,iBAAiB;AACnB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;;EAEE,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,aAAa;EACb,gCAAgC;EAChC,kBAAkB;EAClB,cAAc;AAChB;;AAEA;EACE,SAAS;EACT,0BAA0B;EAC1B,aAAa;EACb,sBAAsB;EACtB,2BAA2B;AAC7B;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,6BAA6B;EAC7B,aAAa;EACb,wBAAwB;EACxB,mBAAmB;EACnB,mBAAmB;EACnB,cAAc;EACd,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,WAAW;EACX,uBAAuB;EACvB,kBAAkB;EAClB,qBAAqB;AACvB;;AAEA;EACE,kBAAkB;EAClB,SAAS;AACX",sourcesContent:["* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n\r\nheader {\r\n  border: 1px solid black;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem 2rem;\r\n  color: aliceblue;\r\n  background: #2c2c2c;\r\n}\r\n\r\nnav {\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 1rem;\r\n}\r\n\r\n.nav-link:hover {\r\n  cursor: pointer;\r\n  color: #feca1b;\r\n}\r\n\r\n/* main */\r\n\r\n.poke-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 20px;\r\n}\r\n\r\n.item {\r\n  text-align: center;\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  width: 200px;\r\n}\r\n\r\n.item > img {\r\n  width: 100px;\r\n  height: 100px;\r\n  object-fit: contain;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n#logo > img {\r\n  width: 10rem;\r\n}\r\n\r\nbutton {\r\n  border: none;\r\n  color: #2c2c2c;\r\n}\r\n\r\n.button {\r\n  border: 1px solid #2c2c2c;\r\n  margin-left: 3px;\r\n  margin-right: 3px;\r\n  height: 25px;\r\n  width: 90px;\r\n}\r\n\r\n.fas {\r\n  font-size: 18px;\r\n  height: 22px;\r\n  color: #feca1b;\r\n  top: 2px;\r\n  position: relative;\r\n  width: 25px;\r\n  background: none;\r\n}\r\n\r\n.fas:hover {\r\n  color: rgb(2, 141, 240);\r\n}\r\n\r\n#poke-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-content: center;\r\n  height: 500px;\r\n  justify-content: center;\r\n}\r\n\r\n/* footer  */\r\n\r\nfooter {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100vw;\r\n  height: 70px;\r\n  right: 0;\r\n  background-color: #2c2c2c;\r\n}\r\n\r\n.footer-p {\r\n  color: rgb(255, 255, 255);\r\n}\r\n\r\n.ftxt {\r\n  color: #feca1b;\r\n  text-decoration: none;\r\n}\r\n\r\n.ftxt:hover {\r\n  color: rgb(2, 141, 240);\r\n  text-decoration: none;\r\n}\r\n\r\n.footer-d {\r\n  height: 70px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/* Popup-Styling */\r\n.hidden {\r\n  display: none;\r\n}\r\n\r\n#container {\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0;\r\n  background:\r\n    linear-gradient(\r\n      90deg,\r\n      rgba(0, 0, 0, 0.8) 29.6%,\r\n      rgba(255, 255, 255, 1) 29.6%,\r\n      rgba(255, 255, 255, 1) 69.1%,\r\n      rgba(0, 0, 0, 0.8) 69.1%\r\n    );\r\n  overflow-y: auto;\r\n  height: 100%;\r\n}\r\n\r\n#popup {\r\n  margin: 0 auto;\r\n  padding: 0.5rem 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 40%;\r\n  max-height: 100vh;\r\n}\r\n\r\n#closePop {\r\n  align-self: flex-end;\r\n}\r\n\r\n#popPic,\r\nfigcaption {\r\n  margin: 0 auto;\r\n  text-align: center;\r\n}\r\n\r\n#popPic > img {\r\n  width: 15rem;\r\n}\r\n\r\n.details {\r\n  margin-top: 2rem;\r\n  display: grid;\r\n  grid-template-columns: 8rem 8rem;\r\n  text-align: center;\r\n  gap: 1rem 7rem;\r\n}\r\n\r\n.stats > ul {\r\n  margin: 0;\r\n  padding: 0 0.1rem 0 0.1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n}\r\n\r\nli {\r\n  list-style: none;\r\n}\r\n\r\n.comment-section {\r\n  margin-top: 1rem;\r\n  text-align: center;\r\n  width: 20rem;\r\n}\r\n\r\n#comments {\r\n  /* border: 1px solid black; */\r\n  margin-top: 0;\r\n  padding: 0 0.5rem 0.5rem;\r\n  line-height: 1.3rem;\r\n  max-height: 5.64rem;\r\n  overflow: auto;\r\n  text-align: left;\r\n}\r\n\r\nform {\r\n  width: 20rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n  align-items: flex-start;\r\n  text-align: center;\r\n  margin: 0.5rem 0 2rem;\r\n}\r\n\r\nform > h4 {\r\n  align-self: center;\r\n  margin: 0;\r\n}\r\n"],sourceRoot:""}]);const a=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(A[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&A[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},A=[],a=0;a<n.length;a++){var c=n[a],s=r.base?c[0]+r.base:c[0],d=i[s]||0,l="".concat(s," ").concat(d);i[s]=d+1;var m=t(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==m)e[m].references++,e[m].updater(p);else{var g=o(p,r);r.byIndex=a,e.splice(a,0,{identifier:l,updater:g,references:1})}A.push(l)}return A}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=t(i[A]);e[a].references--}for(var c=r(n,o),s=0;s<i.length;s++){var d=t(i[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},633:(n,e,t)=>{var r=t(379),o=t.n(r),i=t(795),A=t.n(i),a=t(569),c=t.n(a),s=t(565),d=t.n(s),l=t(216),m=t.n(l),p=t(589),g=t.n(p),u=t(28),E={};E.styleTagTransform=g(),E.setAttributes=d(),E.insert=c().bind(null,"head"),E.domAPI=A(),E.insertStyleElement=m(),o()(u.Z,E),u.Z&&u.Z.locals&&u.Z.locals;const f=async(n,e,t,r)=>{const o=`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/${t}/comments?item_id=${e}`,i=await fetch(o),A=await i.json();n.innerHTML="",A.forEach((e=>{const t=document.createElement("p");t.innerHTML=`${e.creation_date} ${e.username}: ${e.comment}`,n.appendChild(t)}));const a=(n=>n.childElementCount)(n);r.innerText=`Comments (${a})`},h=t.p+"7584f196dd6746853f5a.png",C=new Image;C.src=h,C.alt="logo",document.getElementById("logo").appendChild(C);const B=document.getElementById("poke-list"),b="hY8Nz1dVpsdglVg97VQ1";fetch("https://pokeapi.co/api/v2/pokemon?offset=3&limit=6").then((n=>n.json())).then((n=>{const e=document.createElement("div");e.classList.add("poke-grid"),n.results.forEach((n=>{const t=document.createElement("div");t.classList.add("item");const r=document.createElement("h2");r.textContent=n.name;const o=document.createElement("img"),i=(n=>{const e=n.split("/");return e[e.length-2]})(n.url);o.src=`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${i}.svg`,o.alt=n.name;const A=document.createElement("div");A.classList.add("button-container");const a=document.createElement("button");a.classList.add("button"),a.textContent="Comments",a.setAttribute("name",n.name),a.setAttribute("id",`${i}c`),a.classList.add("pokePop");const c=document.createElement("button");c.classList.add("fas"),c.classList.add("fa-heart"),c.setAttribute("id",`${i}l`),c.textContent="",A.appendChild(c),A.appendChild(a),t.appendChild(r),t.appendChild(o),t.appendChild(A),e.appendChild(t)})),B.appendChild(e)})),document.addEventListener("DOMContentLoaded",(()=>{const n=document.createElement("div");n.id="container",n.className="hidden",document.querySelector("main").addEventListener("click",(async e=>{if(e.target.classList.contains("pokePop")){const t=e.target.name,r=e.target.id.toString(),o=await fetch(`https://pokeapi.co/api/v2/pokemon/${t}`),i=await o.json(),A=[],a=[];for(let n=0;n<4;n+=1)void 0!==i.abilities[n]&&A.push(i.abilities[n].ability.name),void 0!==i.moves[n]&&a.push(i.moves[n].move.name);n.innerHTML=((n,e,t)=>`\n<div id="popup">\n  <a href="#" id="closePop">\n    <i class="fas fa-times fa-lg"></i>\n  </a>\n  <figure id="popPic">\n    <img src="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${n.id}.svg" alt="${n.name}">\n    <figcaption><h1>${n.name}</h1></figcaption>\n  </figure>\n\n  <div class="details">\n    <div class="stats">Height: ${n.height}</div>\n    <div class="stats">Weight: ${n.weight}</div>\n    <div class="stats">Abilities:\n        <ul>\n          ${e.map((n=>`<li>${n}</li>`)).join("")}\n        </ul>\n    </div>\n    <div class="stats">Moves:\n        <ul>\n          ${t.map((n=>`<li>${n}</li>`)).join("")}\n        </ul>\n    </div>  \n  </div>\n  <div class="comment-section">\n    <h4 id='comments-title'>Comments</h4>\n    <div id="comments"></div>\n  </div>\n  <form id='form'>\n    <h4>Add a comment</h4>\n    <input type="text" id="name" name='name' placeholder="Your name" required>\n    <textarea name="comment" id="comment" cols="30" rows="5" placeholder="Your insights" required></textarea>\n    <button type="submit" id='submit'>Comment</button>\n  </form>\n</div>\n`)(i,A,a),document.body.appendChild(n),n.classList.remove("hidden");const c=document.getElementById("comments-title"),s=document.getElementById("comments");f(s,r,b,c);const d=document.getElementById("form");d.addEventListener("click",(async n=>{if("submit"===n.target.id){n.preventDefault();const e=document.getElementById("name"),t=document.getElementById("comment"),o={item_id:r,username:e.value,comment:t.value},i=`https://us-central1-involvement-api.cloudfunctions.net/capstoneApi/apps/${b}/comments`;await fetch(i,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)}).then((n=>n.json())),f(s,r,b,c),d.reset()}})),document.getElementById("closePop").addEventListener("click",(e=>{e.preventDefault(),n.classList.add("hidden")}))}}))}))}},n=>{n(n.s=633)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,